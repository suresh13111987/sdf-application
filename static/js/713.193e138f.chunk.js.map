{"version":3,"file":"static/js/713.193e138f.chunk.js","mappings":"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","sources":["../node_modules/recharts/es6/component/Cell.js","../node_modules/recharts/es6/cartesian/Bar.js","../node_modules/recharts/es6/chart/BarChart.js","redux/Actions/Forecast/index.js","Component/Forecastaccuractcomponents/index.js"],"sourcesContent":["/**\n * @fileOverview Cross\n */\nexport var Cell = function Cell(_props) {\n  return null;\n};\nCell.displayName = 'Cell';","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport _isNil from \"lodash/isNil\";\nimport _isEqual from \"lodash/isEqual\";\nimport _isFunction from \"lodash/isFunction\";\nimport _isArray from \"lodash/isArray\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @fileOverview Render a group of bar\n */\nimport React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport Animate from 'react-smooth';\nimport { Rectangle } from '../shape/Rectangle';\nimport { Layer } from '../container/Layer';\nimport { ErrorBar } from './ErrorBar';\nimport { Cell } from '../component/Cell';\nimport { LabelList } from '../component/LabelList';\nimport { uniqueId, mathSign, interpolateNumber } from '../util/DataUtils';\nimport { findAllByType } from '../util/ReactUtils';\nimport { Global } from '../util/Global';\nimport { getCateCoordinateOfBar, getValueByDataKey, truncateByDomain, getBaseValueOfBar, findPositionOfBar, getTooltipItem } from '../util/ChartUtils';\nimport { filterProps, adaptEventsOfChild } from '../util/types';\nexport var Bar = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Bar, _PureComponent);\n\n  var _super = _createSuper(Bar);\n\n  function Bar() {\n    var _this;\n\n    _classCallCheck(this, Bar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isAnimationFinished: false\n    };\n    _this.id = uniqueId('recharts-bar-');\n\n    _this.handleAnimationEnd = function () {\n      var onAnimationEnd = _this.props.onAnimationEnd;\n\n      _this.setState({\n        isAnimationFinished: true\n      });\n\n      if (onAnimationEnd) {\n        onAnimationEnd();\n      }\n    };\n\n    _this.handleAnimationStart = function () {\n      var onAnimationStart = _this.props.onAnimationStart;\n\n      _this.setState({\n        isAnimationFinished: false\n      });\n\n      if (onAnimationStart) {\n        onAnimationStart();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Bar, [{\n    key: \"renderRectanglesStatically\",\n    value: function renderRectanglesStatically(data) {\n      var _this2 = this;\n\n      var shape = this.props.shape;\n      var baseProps = filterProps(this.props);\n      return data && data.map(function (entry, i) {\n        var props = _objectSpread(_objectSpread(_objectSpread({}, baseProps), entry), {}, {\n          index: i\n        });\n\n        return /*#__PURE__*/React.createElement(Layer, _extends({\n          className: \"recharts-bar-rectangle\"\n        }, adaptEventsOfChild(_this2.props, entry, i), {\n          key: \"rectangle-\".concat(i) // eslint-disable-line react/no-array-index-key\n\n        }), Bar.renderRectangle(shape, props));\n      });\n    }\n  }, {\n    key: \"renderRectanglesWithAnimation\",\n    value: function renderRectanglesWithAnimation() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          data = _this$props.data,\n          layout = _this$props.layout,\n          isAnimationActive = _this$props.isAnimationActive,\n          animationBegin = _this$props.animationBegin,\n          animationDuration = _this$props.animationDuration,\n          animationEasing = _this$props.animationEasing,\n          animationId = _this$props.animationId;\n      var prevData = this.state.prevData;\n      return /*#__PURE__*/React.createElement(Animate, {\n        begin: animationBegin,\n        duration: animationDuration,\n        isActive: isAnimationActive,\n        easing: animationEasing,\n        from: {\n          t: 0\n        },\n        to: {\n          t: 1\n        },\n        key: \"bar-\".concat(animationId),\n        onAnimationEnd: this.handleAnimationEnd,\n        onAnimationStart: this.handleAnimationStart\n      }, function (_ref) {\n        var t = _ref.t;\n        var stepData = data.map(function (entry, index) {\n          var prev = prevData && prevData[index];\n\n          if (prev) {\n            var interpolatorX = interpolateNumber(prev.x, entry.x);\n            var interpolatorY = interpolateNumber(prev.y, entry.y);\n            var interpolatorWidth = interpolateNumber(prev.width, entry.width);\n            var interpolatorHeight = interpolateNumber(prev.height, entry.height);\n            return _objectSpread(_objectSpread({}, entry), {}, {\n              x: interpolatorX(t),\n              y: interpolatorY(t),\n              width: interpolatorWidth(t),\n              height: interpolatorHeight(t)\n            });\n          }\n\n          if (layout === 'horizontal') {\n            var _interpolatorHeight = interpolateNumber(0, entry.height);\n\n            var h = _interpolatorHeight(t);\n\n            return _objectSpread(_objectSpread({}, entry), {}, {\n              y: entry.y + entry.height - h,\n              height: h\n            });\n          }\n\n          var interpolator = interpolateNumber(0, entry.width);\n          var w = interpolator(t);\n          return _objectSpread(_objectSpread({}, entry), {}, {\n            width: w\n          });\n        });\n        return /*#__PURE__*/React.createElement(Layer, null, _this3.renderRectanglesStatically(stepData));\n      });\n    }\n  }, {\n    key: \"renderRectangles\",\n    value: function renderRectangles() {\n      var _this$props2 = this.props,\n          data = _this$props2.data,\n          isAnimationActive = _this$props2.isAnimationActive;\n      var prevData = this.state.prevData;\n\n      if (isAnimationActive && data && data.length && (!prevData || !_isEqual(prevData, data))) {\n        return this.renderRectanglesWithAnimation();\n      }\n\n      return this.renderRectanglesStatically(data);\n    }\n  }, {\n    key: \"renderBackground\",\n    value: function renderBackground() {\n      var _this4 = this;\n\n      var data = this.props.data;\n      var backgroundProps = filterProps(this.props.background);\n      return data.map(function (entry, i) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        var value = entry.value,\n            background = entry.background,\n            rest = _objectWithoutProperties(entry, [\"value\", \"background\"]);\n\n        if (!background) {\n          return null;\n        }\n\n        var props = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, rest), {}, {\n          fill: '#eee'\n        }, background), backgroundProps), adaptEventsOfChild(_this4.props, entry, i)), {}, {\n          index: i,\n          key: \"background-bar-\".concat(i),\n          className: 'recharts-bar-background-rectangle'\n        });\n\n        return Bar.renderRectangle(_this4.props.background, props);\n      });\n    }\n  }, {\n    key: \"renderErrorBar\",\n    value: function renderErrorBar() {\n      if (this.props.isAnimationActive && !this.state.isAnimationFinished) {\n        return null;\n      }\n\n      var _this$props3 = this.props,\n          data = _this$props3.data,\n          xAxis = _this$props3.xAxis,\n          yAxis = _this$props3.yAxis,\n          layout = _this$props3.layout,\n          children = _this$props3.children;\n      var errorBarItems = findAllByType(children, ErrorBar.displayName);\n\n      if (!errorBarItems) {\n        return null;\n      }\n\n      var offset = layout === 'vertical' ? data[0].height / 2 : data[0].width / 2;\n\n      function dataPointFormatter(dataPoint, dataKey) {\n        return {\n          x: dataPoint.x,\n          y: dataPoint.y,\n          value: dataPoint.value,\n          errorVal: getValueByDataKey(dataPoint, dataKey)\n        };\n      }\n\n      return errorBarItems.map(function (item, i) {\n        return /*#__PURE__*/React.cloneElement(item, {\n          key: \"error-bar-\".concat(i),\n          // eslint-disable-line react/no-array-index-key\n          data: data,\n          xAxis: xAxis,\n          yAxis: yAxis,\n          layout: layout,\n          offset: offset,\n          dataPointFormatter: dataPointFormatter\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          hide = _this$props4.hide,\n          data = _this$props4.data,\n          className = _this$props4.className,\n          xAxis = _this$props4.xAxis,\n          yAxis = _this$props4.yAxis,\n          left = _this$props4.left,\n          top = _this$props4.top,\n          width = _this$props4.width,\n          height = _this$props4.height,\n          isAnimationActive = _this$props4.isAnimationActive,\n          background = _this$props4.background,\n          id = _this$props4.id;\n\n      if (hide || !data || !data.length) {\n        return null;\n      }\n\n      var isAnimationFinished = this.state.isAnimationFinished;\n      var layerClass = classNames('recharts-bar', className);\n      var needClip = xAxis && xAxis.allowDataOverflow || yAxis && yAxis.allowDataOverflow;\n      var clipPathId = _isNil(id) ? this.id : id;\n      return /*#__PURE__*/React.createElement(Layer, {\n        className: layerClass\n      }, needClip ? /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n        id: \"clipPath-\".concat(clipPathId)\n      }, /*#__PURE__*/React.createElement(\"rect\", {\n        x: left,\n        y: top,\n        width: width,\n        height: height\n      }))) : null, /*#__PURE__*/React.createElement(Layer, {\n        className: \"recharts-bar-rectangles\",\n        clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : null\n      }, background ? this.renderBackground() : null, this.renderRectangles()), this.renderErrorBar(), (!isAnimationActive || isAnimationFinished) && LabelList.renderCallByParent(this.props, data));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.animationId !== prevState.prevAnimationId) {\n        return {\n          prevAnimationId: nextProps.animationId,\n          curData: nextProps.data,\n          prevData: prevState.curData\n        };\n      }\n\n      if (nextProps.data !== prevState.curData) {\n        return {\n          curData: nextProps.data\n        };\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderRectangle\",\n    value: function renderRectangle(option, props) {\n      var rectangle;\n\n      if ( /*#__PURE__*/React.isValidElement(option)) {\n        rectangle = /*#__PURE__*/React.cloneElement(option, props);\n      } else if (_isFunction(option)) {\n        rectangle = option(props);\n      } else {\n        rectangle = /*#__PURE__*/React.createElement(Rectangle, props);\n      }\n\n      return rectangle;\n    }\n  }]);\n\n  return Bar;\n}(PureComponent);\nBar.displayName = 'Bar';\nBar.defaultProps = {\n  xAxisId: 0,\n  yAxisId: 0,\n  legendType: 'rect',\n  minPointSize: 0,\n  hide: false,\n  // data of bar\n  data: [],\n  layout: 'vertical',\n  isAnimationActive: !Global.isSsr,\n  animationBegin: 0,\n  animationDuration: 400,\n  animationEasing: 'ease'\n};\n\nBar.getComposedData = function (_ref2) {\n  var props = _ref2.props,\n      item = _ref2.item,\n      barPosition = _ref2.barPosition,\n      bandSize = _ref2.bandSize,\n      xAxis = _ref2.xAxis,\n      yAxis = _ref2.yAxis,\n      xAxisTicks = _ref2.xAxisTicks,\n      yAxisTicks = _ref2.yAxisTicks,\n      stackedData = _ref2.stackedData,\n      dataStartIndex = _ref2.dataStartIndex,\n      displayedData = _ref2.displayedData,\n      offset = _ref2.offset;\n  var pos = findPositionOfBar(barPosition, item);\n\n  if (!pos) {\n    return null;\n  }\n\n  var layout = props.layout;\n  var _item$props = item.props,\n      dataKey = _item$props.dataKey,\n      children = _item$props.children,\n      minPointSize = _item$props.minPointSize;\n  var numericAxis = layout === 'horizontal' ? yAxis : xAxis;\n  var stackedDomain = stackedData ? numericAxis.scale.domain() : null;\n  var baseValue = getBaseValueOfBar({\n    numericAxis: numericAxis\n  });\n  var cells = findAllByType(children, Cell.displayName);\n  var rects = displayedData.map(function (entry, index) {\n    var value, x, y, width, height, background;\n\n    if (stackedData) {\n      value = truncateByDomain(stackedData[dataStartIndex + index], stackedDomain);\n    } else {\n      value = getValueByDataKey(entry, dataKey);\n\n      if (!_isArray(value)) {\n        value = [baseValue, value];\n      }\n    }\n\n    if (layout === 'horizontal') {\n      x = getCateCoordinateOfBar({\n        axis: xAxis,\n        ticks: xAxisTicks,\n        bandSize: bandSize,\n        offset: pos.offset,\n        entry: entry,\n        index: index\n      });\n      y = yAxis.scale(value[1]);\n      width = pos.size;\n      height = yAxis.scale(value[0]) - yAxis.scale(value[1]);\n      background = {\n        x: x,\n        y: yAxis.y,\n        width: width,\n        height: yAxis.height\n      };\n\n      if (Math.abs(minPointSize) > 0 && Math.abs(height) < Math.abs(minPointSize)) {\n        var delta = mathSign(height || minPointSize) * (Math.abs(minPointSize) - Math.abs(height));\n        y -= delta;\n        height += delta;\n      }\n    } else {\n      x = xAxis.scale(value[0]);\n      y = getCateCoordinateOfBar({\n        axis: yAxis,\n        ticks: yAxisTicks,\n        bandSize: bandSize,\n        offset: pos.offset,\n        entry: entry,\n        index: index\n      });\n      width = xAxis.scale(value[1]) - xAxis.scale(value[0]);\n      height = pos.size;\n      background = {\n        x: xAxis.x,\n        y: y,\n        width: xAxis.width,\n        height: height\n      };\n\n      if (Math.abs(minPointSize) > 0 && Math.abs(width) < Math.abs(minPointSize)) {\n        var _delta = mathSign(width || minPointSize) * (Math.abs(minPointSize) - Math.abs(width));\n\n        width += _delta;\n      }\n    }\n\n    return _objectSpread(_objectSpread(_objectSpread({}, entry), {}, {\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      value: stackedData ? value : value[1],\n      payload: entry,\n      background: background\n    }, cells && cells[index] && cells[index].props), {}, {\n      tooltipPayload: [getTooltipItem(item, entry)],\n      tooltipPosition: {\n        x: x + width / 2,\n        y: y + height / 2\n      }\n    });\n  });\n  return _objectSpread({\n    data: rects,\n    layout: layout\n  }, offset);\n};","/**\n * @fileOverview Bar Chart\n */\nimport { generateCategoricalChart } from './generateCategoricalChart';\nimport { Bar } from '../cartesian/Bar';\nimport { XAxis } from '../cartesian/XAxis';\nimport { YAxis } from '../cartesian/YAxis';\nimport { formatAxisMap } from '../util/CartesianUtils';\nexport var BarChart = generateCategoricalChart({\n  chartName: 'BarChart',\n  GraphicalChild: Bar,\n  defaultTooltipEventType: 'axis',\n  validateTooltipEventTypes: ['axis', 'item'],\n  axisComponents: [{\n    axisType: 'xAxis',\n    AxisComp: XAxis\n  }, {\n    axisType: 'yAxis',\n    AxisComp: YAxis\n  }],\n  formatAxisMap: formatAxisMap\n});","import axios from \"axios\";\r\nimport {FORECAST_DATA_TYPES} from \"./ForecastDataType\";\r\nimport URLConfig from \"../../../URLConfig\";\r\nconst accessToken=window.sessionStorage.getItem('accesstoken');\r\nexport const getAllfilterdetails=()=>{\r\nreturn async(dispatch)=>{\r\n   try{\r\n   dispatch({type:FORECAST_DATA_TYPES.FILTER_DETAILS_FETCHING,})\r\n  let url=URLConfig.allFilterdetailsdb2();\r\n   const response=await axios.post(url,{},{headers:{'Token':accessToken}});\r\n   dispatch({type:FORECAST_DATA_TYPES.FILTER_DETAILS_FETCHED,payload:response})\r\n   }\r\n   catch(e)\r\n   {\r\n      dispatch({type:FORECAST_DATA_TYPES.FILTER_DETAILS_FAILED})\r\n   }\r\n}\r\n}\r\nexport const ForecastAccuracy=(reqbody)=>{\r\n   return async(dispatch)=>{\r\n       try{\r\n        dispatch({\r\n           type:FORECAST_DATA_TYPES.FORECAST_DATA_FETCHING,\r\n        })\r\n        let url=URLConfig.forecastAccuracydb2();\r\n        const response=await axios.post(url,reqbody,{headers:{'Token':accessToken}});\r\n        dispatch({\r\n           type:FORECAST_DATA_TYPES.FORECAST_DATA_FETCHED,\r\n           payload:response\r\n        })\r\n       }\r\n       catch(err){\r\n        dispatch({\r\n           type:FORECAST_DATA_TYPES.FORECAST_DATA_FAILED,\r\n        })\r\n       }\r\n   }\r\n}\r\nexport const productTypeforecastgraph=(reqbody)=>{\r\n   return async(dispatch)=>{\r\n      try{\r\n       dispatch({\r\n         type:FORECAST_DATA_TYPES.PRODUCT_TYPE_GRAPH_FETCHING\r\n       })\r\n       let url=URLConfig.porductTypeforecastdb2();\r\n       const response=await axios.post(url,reqbody);\r\n       dispatch({\r\n         type:FORECAST_DATA_TYPES.PRODUCT_TYPE_GRAPH_FETCHED,\r\n         payload:response\r\n       })\r\n      }\r\n      catch(e)\r\n      {\r\n        dispatch({\r\n         type:FORECAST_DATA_TYPES.PRODUCT_TYPE_GRAPH_FAILED\r\n        })\r\n      }\r\n   }\r\n}\r\nexport const demandVolumeforecastgraph=(reqbody)=>{\r\n   console.log('reqbody',reqbody);\r\n   return async(dispatch)=>{\r\n      try{\r\n         dispatch({\r\n           type:FORECAST_DATA_TYPES.DEMAND_GRAPH_FETCHING\r\n         })\r\n         let url=URLConfig.demandVolumeforecastgraph();\r\n         const response=await axios.post(url,reqbody);\r\n         dispatch({\r\n           type:FORECAST_DATA_TYPES.DEMAND_GRAPH_FETCHED,\r\n           payload:response\r\n         })\r\n        }\r\n        catch(e)\r\n        {\r\n          dispatch({\r\n           type:FORECAST_DATA_TYPES.DEMAND_GRAPH_FAILED\r\n          })\r\n        }\r\n   }\r\n}\r\nexport const demandDeviationforecastgraph=(reqbody)=>{\r\n   return async(dispatch)=>{\r\n      try{\r\n        dispatch({\r\n         type:FORECAST_DATA_TYPES.DEVIATION_GRAPH_FETCHING\r\n        })\r\n        let url=URLConfig.demandDeviationforecastgraph();\r\n        const response=await axios.post(url,reqbody);\r\n        dispatch({\r\n         type:FORECAST_DATA_TYPES.DEVIATION_GRAPH_FETCHED,\r\n         payload:response\r\n        })\r\n      }\r\n      catch(e)\r\n      {\r\n        dispatch({\r\n         type:FORECAST_DATA_TYPES.DEVIATION_GRAPH_FAILED\r\n        })\r\n      }\r\n   }\r\n}\r\nexport const chooseGraphrelativeFunc=(parameter)=>{\r\n   return(dispatch)=>{\r\n    dispatch({\r\n      type:FORECAST_DATA_TYPES.CHOOSE_GRAPH_RELATIVE,\r\n      value:parameter\r\n    })\r\n   }\r\n}\r\nexport const showSdfvalueset=(parameter)=>{\r\n   return(dispatch)=>{\r\n      dispatch(\r\n      {type:FORECAST_DATA_TYPES.SHOW_SDF,\r\n      value:parameter}\r\n      )\r\n   }\r\n}\r\nexport const showSdfmodifiedset=(parameter)=>{\r\n   return(dispatch)=>{\r\n      dispatch(\r\n         {\r\n            type:FORECAST_DATA_TYPES.SHOW_SDF_MODIFIED,\r\n            value:parameter\r\n         }\r\n      )\r\n   }\r\n}\r\nexport const setDeviationgraphchange=(parameter)=>{\r\n   return(dispatch)=>{\r\n      dispatch({\r\n         type:FORECAST_DATA_TYPES.DEVIATION_GRPAH_CHANGE,\r\n         value:parameter\r\n      })\r\n   }\r\n}\r\nexport const setselectedProduct=(parameter)=>{\r\n   return(dispatch)=>{\r\n      dispatch({\r\n         type:FORECAST_DATA_TYPES.SELECTED_PRODUCT,\r\n         value:parameter\r\n      })\r\n   }\r\n}\r\nexport const  setselectedDepdency=(parameter)=>{\r\n   return(dispatch)=>{\r\n      dispatch({\r\n         type:FORECAST_DATA_TYPES.SELECTED_DEPEDENCY,\r\n         value:parameter\r\n      })\r\n   }\r\n}\r\nexport const setproductDepenedency=(parameter)=>{\r\n   return(dispatch)=>{\r\n      dispatch({\r\n         type:FORECAST_DATA_TYPES.PRODUCT_DEPEDENCY,\r\n         value:parameter\r\n      })\r\n   }\r\n}\r\nexport const setproductCategory=(parameter)=>{\r\n   return(dispatch)=>{\r\n      dispatch({\r\n         type:FORECAST_DATA_TYPES.PRODUCT_CATEGORY_VALUES,\r\n         value:parameter\r\n      })\r\n   }\r\n}\r\nexport const setsnapShotselectedvalue=(parameter)=>{\r\n   return(dispatch)=>{\r\n      dispatch({\r\n         type:FORECAST_DATA_TYPES.SNAP_SELECTED_VALUES,\r\n         value:parameter\r\n      })\r\n   }\r\n}\r\nexport const setsnapShottoanalyze=(parameter)=>{\r\n   return(dispatch)=>{\r\n      dispatch({\r\n         type:FORECAST_DATA_TYPES.SNAP_SHOT_ANALYZE,\r\n         value:parameter\r\n      })\r\n   }\r\n}\r\nexport const setlagsSelectedvalue=(parameter)=>{\r\n   return(dispatch)=>{\r\n      dispatch({\r\n         type:FORECAST_DATA_TYPES.LAG_SELECTED_VALUES,\r\n         value:parameter\r\n      })\r\n   }\r\n}\r\nexport const setlagsFormeasurement=(parameter)=>{\r\n   return(dispatch)=>{\r\n      dispatch({\r\n         type:FORECAST_DATA_TYPES.LAGS_FOR_MEASUREMENTS,\r\n         value:parameter\r\n      })\r\n   }\r\n}\r\nexport const setselectedDfuvalue=(parameter)=>{\r\n   return(dispatch)=>{\r\n      dispatch({\r\n         type:FORECAST_DATA_TYPES.SELECTED_DFU_VALUE,\r\n         value:parameter\r\n      })\r\n   }\r\n}\r\nexport const setDFUdropdown=(parameter)=>{\r\n   return(dispatch)=>{\r\n      dispatch({\r\n         type:FORECAST_DATA_TYPES.DFU_DROPDOWN,\r\n         value:parameter\r\n      })\r\n   }\r\n}","import \"../../css/Forecastaccuratecssfolder/foreCastaccurate.css\";\r\nimport Select from \"react-select\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Line,\r\n  BarChart,\r\n  Bar,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Cell,\r\n  Legend,\r\n  Tooltip,\r\n} from \"recharts\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getAllfilterdetails,\r\n  ForecastAccuracy,\r\n  productTypeforecastgraph,\r\n  demandVolumeforecastgraph,\r\n  demandDeviationforecastgraph,\r\n  chooseGraphrelativeFunc,\r\n  showSdfvalueset,\r\n  showSdfmodifiedset,\r\n  setDeviationgraphchange,\r\n  setselectedProduct,\r\n  setselectedDepdency,\r\n  setproductDepenedency,\r\n  setproductCategory,\r\n  setsnapShotselectedvalue,\r\n  setsnapShottoanalyze,\r\n  setlagsSelectedvalue,\r\n  setlagsFormeasurement,\r\n  setselectedDfuvalue,\r\n  setDFUdropdown,\r\n} from \"../../redux/Actions/Forecast\";\r\nimport { toast } from \"react-toastify\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Stack from \"react-bootstrap/Stack\";\r\n\r\nexport const ForCastmaincomponent = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    categoryDropdown,\r\n    accuracyForecastyearsgraph,\r\n    productDependentgraph,\r\n    demandGraphbind,\r\n    deviationGraphbind,\r\n    chooseGraphrelative,\r\n    showSdf,\r\n    showSdfmodified,\r\n    deviationGraphbindvalue,\r\n    selectedProduct,\r\n    selectedDepdency,\r\n    productDepenedency,\r\n    productCategory,\r\n    snapShotselectedvalue,\r\n    snapShottoanalyze,\r\n    lagsSelectedvalue,\r\n    lagsFormeasurement,\r\n    selectedDfuvalue,\r\n    DFUdropdown,\r\n  } = useSelector((state) => ({\r\n    categoryDropdown: state.forecastAccurateReducer,\r\n    accuracyForecastyearsgraph:\r\n      state.forecastAccurateReducer.forecastDataresponse.data,\r\n    productDependentgraph: state.forecastAccurateReducer.productGraph.data,\r\n    demandGraphbind: state.forecastAccurateReducer.demandGraph.data,\r\n    deviationGraphbind: state.forecastAccurateReducer.deviationGraph.data,\r\n    chooseGraphrelative: state.forecastAccurateReducer.chooseGraphrelative,\r\n    showSdf: state.forecastAccurateReducer.showSdf,\r\n    showSdfmodified: state.forecastAccurateReducer.showSdfmodified,\r\n    deviationGraphbindvalue:\r\n      state.forecastAccurateReducer.deviationGraphbindvalue,\r\n    selectedProduct: state.forecastAccurateReducer.selectedProduct,\r\n    selectedDepdency: state.forecastAccurateReducer.selectedDepdency,\r\n    productDepenedency: state.forecastAccurateReducer.productDepenedency,\r\n    productCategory: state.forecastAccurateReducer.productCategory,\r\n    snapShotselectedvalue: state.forecastAccurateReducer.snapShotselectedvalue,\r\n    snapShottoanalyze: state.forecastAccurateReducer.snapShottoanalyze,\r\n    lagsSelectedvalue: state.forecastAccurateReducer.lagsSelectedvalue,\r\n    lagsFormeasurement: state.forecastAccurateReducer.lagsFormeasurement,\r\n    selectedDfuvalue: state.forecastAccurateReducer.selectedDfuvalue,\r\n    DFUdropdown: state.forecastAccurateReducer.DFUdropdown,\r\n  }));\r\n  const { t, i18n } = useTranslation();\r\n  useEffect(() => {\r\n    try {\r\n      i18n.changeLanguage(window.sessionStorage.getItem(\"language\"));\r\n      dispatch(getAllfilterdetails());\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, []);\r\n  const lagsValuemanipulation = (lagValue) => {\r\n    var valueArr = [];\r\n    lagValue.map((val) => {\r\n      valueArr.push(val.value);\r\n    });\r\n    return valueArr;\r\n  };\r\n  const selectedcategryValuechange = (categoryVal) => {\r\n    var cateGoval = [];\r\n    categoryVal.map((val) => {\r\n      cateGoval.push(val.value);\r\n    });\r\n    return cateGoval;\r\n  };\r\n  /*This code is used for handling the error  */\r\n  const getFiltererroHandler = () => {\r\n    //This function is used to add the toaster for the get filters api.\r\n    let categoryVaraible = categoryDropdown.CategoryResponse;\r\n    if (\r\n      categoryVaraible !== undefined &&\r\n      categoryVaraible.data !== undefined &&\r\n      categoryVaraible.data.status !== undefined &&\r\n      categoryVaraible.data.status === false\r\n    ) {\r\n      toast.error(categoryVaraible.data.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (\r\n      categoryDropdown.Categorydataapistatus === 2 &&\r\n      accuracyForecastyearsgraph.status !== undefined &&\r\n      accuracyForecastyearsgraph.status === false\r\n    ) {\r\n      toast.error(accuracyForecastyearsgraph.message);\r\n    }\r\n  }, [accuracyForecastyearsgraph]);\r\n  useEffect(() => {\r\n    if (\r\n      categoryDropdown.Categorydataapistatus === 2 &&\r\n      deviationGraphbind.status !== undefined &&\r\n      deviationGraphbind.status === false\r\n    ) {\r\n      toast.error(deviationGraphbind.message);\r\n    }\r\n  }, [deviationGraphbind]);\r\n  useEffect(() => {\r\n    if (\r\n      categoryDropdown.Categorydataapistatus === 2 &&\r\n      demandGraphbind.status !== undefined &&\r\n      demandGraphbind.status === false\r\n    ) {\r\n      toast.error(demandGraphbind.message);\r\n    }\r\n  }, [\r\n    demandGraphbind,\r\n  ]); /*This useEffect for showing the toaster for the demand volume graph */\r\n  useEffect(() => {\r\n    if (\r\n      categoryDropdown.Categorydataapistatus === 2 &&\r\n      productDependentgraph.status !== undefined &&\r\n      productDependentgraph.status === false\r\n    ) {\r\n      toast.error(productDependentgraph.message);\r\n    }\r\n  }, [productDependentgraph]); //This useEffect for showing the toaster for the category and product graph.\r\n  /*This code is used for handling the error Ends here  */\r\n  useEffect(() => {\r\n    try {\r\n      dispatch(\r\n        ForecastAccuracy({\r\n          filters: {\r\n            aggregationLevel:\r\n              selectedDfuvalue !== null && selectedDfuvalue.text !== undefined\r\n                ? selectedDfuvalue.text\r\n                : \"DFU\",\r\n            LagsofMeasurement:\r\n              lagsSelectedvalue !== null\r\n                ? lagsValuemanipulation(lagsSelectedvalue)\r\n                : [],\r\n            snapshottoAnalyse:\r\n              snapShotselectedvalue !== null &&\r\n              snapShotselectedvalue.snapshotvalue !== undefined\r\n                ? snapShotselectedvalue.snapshotvalue\r\n                : \"\",\r\n          },\r\n        })\r\n      );\r\n      dispatch(\r\n        demandVolumeforecastgraph({\r\n          filters: {\r\n            aggregationLevel:\r\n              selectedDfuvalue !== null && selectedDfuvalue.text !== undefined\r\n                ? selectedDfuvalue.text\r\n                : \"DFU\",\r\n            LagsofMeasurement:\r\n              lagsSelectedvalue !== null\r\n                ? lagsValuemanipulation(lagsSelectedvalue)\r\n                : [],\r\n            snapshottoAnalyse:\r\n              snapShotselectedvalue !== null &&\r\n              snapShotselectedvalue.snapshotvalue !== undefined\r\n                ? snapShotselectedvalue.snapshotvalue\r\n                : \"\",\r\n          },\r\n        })\r\n      );\r\n      dispatch(\r\n        demandDeviationforecastgraph({\r\n          filters: {\r\n            aggregationLevel:\r\n              selectedDfuvalue !== null && selectedDfuvalue.text !== undefined\r\n                ? selectedDfuvalue.text\r\n                : \"DFU\",\r\n            LagsofMeasurement:\r\n              lagsSelectedvalue !== null\r\n                ? lagsValuemanipulation(lagsSelectedvalue)\r\n                : [],\r\n            snapshottoAnalyse:\r\n              snapShotselectedvalue !== null &&\r\n              snapShotselectedvalue.snapshotvalue !== undefined\r\n                ? snapShotselectedvalue.snapshotvalue\r\n                : \"\",\r\n          },\r\n        })\r\n      );\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, [selectedDfuvalue, lagsSelectedvalue, snapShotselectedvalue]);\r\n  useEffect(() => {\r\n    try {\r\n      dispatch(\r\n        productTypeforecastgraph({\r\n          filters: {\r\n            aggregationLevel:\r\n              selectedDfuvalue !== null && selectedDfuvalue.text !== undefined\r\n                ? selectedDfuvalue.text\r\n                : \"DFU\",\r\n            LagsofMeasurement:\r\n              lagsSelectedvalue !== null\r\n                ? lagsValuemanipulation(lagsSelectedvalue)\r\n                : [],\r\n            snapshottoAnalyse:\r\n              snapShotselectedvalue !== null &&\r\n              snapShotselectedvalue.snapshotvalue !== undefined\r\n                ? snapShotselectedvalue.snapshotvalue\r\n                : \"\",\r\n            category:\r\n              selectedDepdency !== null && selectedDepdency.length > 0\r\n                ? selectedcategryValuechange(selectedDepdency)\r\n                : [],\r\n          },\r\n        })\r\n      );\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, [\r\n    selectedDfuvalue,\r\n    lagsSelectedvalue,\r\n    snapShotselectedvalue,\r\n    selectedProduct,\r\n    selectedDepdency,\r\n  ]);\r\n  const DfuFilterinitialLoad = (arrayData) => {\r\n    try {\r\n      let dfuValdropdown = [];\r\n      dispatch(\r\n        setselectedDfuvalue({\r\n          value: 0,\r\n          text: arrayData.aggregationLevel.filter(\r\n            (x) => String(x).toLowerCase() === \"dfu\"\r\n          )[0],\r\n        })\r\n      );\r\n      arrayData.aggregationLevel.map((value, index) => {\r\n        let objectVariable = {\r\n          value: index,\r\n          text: value,\r\n        };\r\n        dfuValdropdown.push(objectVariable);\r\n      });\r\n      dispatch(setDFUdropdown(dfuValdropdown));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  const LagsDropdowninitialLoad = (arrayData) => {\r\n    try {\r\n      let LagsValuedropdown = [];\r\n      arrayData.lags.map((val) => {\r\n        if (val !== null) {\r\n          let objectVariable = {\r\n            value: val,\r\n          };\r\n          LagsValuedropdown.push(objectVariable);\r\n        }\r\n      });\r\n      dispatch(\r\n        setlagsSelectedvalue([\r\n          {\r\n            value: LagsValuedropdown.sort((a, b) => a.value - b.value)[0].value,\r\n          },\r\n        ])\r\n      );\r\n      dispatch(setlagsFormeasurement(LagsValuedropdown));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  const SnapshottoAnalyseinitailLoad = (arrayData) => {\r\n    try {\r\n      let snapShotValue = [];\r\n      arrayData.snapShot.map((value) => {\r\n        let objectVariable = {\r\n          snapshotvalue: value,\r\n        };\r\n        snapShotValue.push(objectVariable);\r\n      });\r\n      let sortedSnapshot = snapShotValue.sort(function (a, b) {\r\n        a = new Date(a.snapshotvalue);\r\n        b = new Date(b.snapshotvalue);\r\n        return a - b;\r\n      });\r\n      dispatch(\r\n        setsnapShotselectedvalue(sortedSnapshot[sortedSnapshot.length - 1])\r\n      );\r\n      dispatch(setsnapShottoanalyze(snapShotValue));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  const categoryDepedencyInitialloadfilters = (arrayData) => {\r\n    try {\r\n      let productCategory = [];\r\n      let cartegoryTypeautoselect = [];\r\n      var defaultSelectedarray = [];\r\n      for (let key in arrayData.category) {\r\n        let objetVariable = {\r\n          productValue: key,\r\n          depedencyValue: arrayData.category[key],\r\n        };\r\n        productCategory.push(objetVariable);\r\n        if (key === \"plant\") {\r\n          defaultSelectedarray.push(objetVariable);\r\n        }\r\n      }\r\n      if (\r\n        defaultSelectedarray &&\r\n        defaultSelectedarray.length > 0 &&\r\n        defaultSelectedarray[0].depedencyValue !== undefined &&\r\n        defaultSelectedarray[0].depedencyValue != null\r\n      ) {\r\n        defaultSelectedarray[0].depedencyValue.map((val, index) => {\r\n          var arr = {\r\n            value: val,\r\n          };\r\n          cartegoryTypeautoselect.push(arr);\r\n        });\r\n      }\r\n      dispatch(setselectedDepdency(cartegoryTypeautoselect));\r\n      dispatch(setselectedProduct(defaultSelectedarray));\r\n      dispatch(setproductDepenedency(cartegoryTypeautoselect));\r\n      dispatch(setproductCategory(productCategory));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    try {\r\n      if (\r\n        categoryDropdown !== undefined &&\r\n        categoryDropdown.CategoryResponse !== undefined &&\r\n        categoryDropdown.CategoryResponse.data !== undefined &&\r\n        categoryDropdown.CategoryResponse.data.aggregationLevel !== undefined &&\r\n        categoryDropdown.CategoryResponse.data.lags !== undefined &&\r\n        categoryDropdown.CategoryResponse.data.snapShot != undefined &&\r\n        categoryDropdown.CategoryResponse.data.category != undefined\r\n      ) {\r\n        let arrayData = categoryDropdown.CategoryResponse.data;\r\n        DfuFilterinitialLoad(arrayData);\r\n        LagsDropdowninitialLoad(arrayData);\r\n        SnapshottoAnalyseinitailLoad(arrayData);\r\n        categoryDepedencyInitialloadfilters(arrayData);\r\n      }\r\n      getFiltererroHandler();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, [categoryDropdown.CategoryResponse]);\r\n\r\n  const ProductDepedencyDropdown = (e) => {\r\n    try {\r\n      if (e !== undefined && e !== null) {\r\n        var arrayValue = [];\r\n        e.depedencyValue.map((val) => {\r\n          var arr = {\r\n            value: val,\r\n          };\r\n          arrayValue.push(arr);\r\n          dispatch(setproductDepenedency(arrayValue));\r\n          dispatch(setselectedDepdency(arrayValue));\r\n        });\r\n      } else {\r\n        dispatch(setproductDepenedency([]));\r\n        dispatch(setselectedDepdency([]));\r\n      }\r\n\r\n      dispatch(setselectedProduct(e));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      if (\r\n        accuracyForecastyearsgraph !== undefined &&\r\n        accuracyForecastyearsgraph.lag0value !== null\r\n      ) {\r\n        dispatch(showSdfvalueset(accuracyForecastyearsgraph.lag0value.fca_sdf));\r\n        dispatch(\r\n          showSdfmodifiedset(accuracyForecastyearsgraph.lag0value.bias_enriched)\r\n        );\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, [accuracyForecastyearsgraph]);\r\n\r\n  const formatyaxis = (value) => {\r\n    return chooseGraphrelative ? value + \"K\" : value + \"%\";\r\n  };\r\n  const formatyaxis1 = (value) => {\r\n    return value + \"K\";\r\n  };\r\n  const renderCustomBarlabel = ({ payload, x, y, width, height, value }) => {\r\n    return (\r\n      <text\r\n        className=\"bar-label\"\r\n        x={x + width / 2}\r\n        y={y}\r\n        fill=\"#666\"\r\n        textAnchor=\"middle\"\r\n        dy={-6}\r\n      >\r\n        {Number.parseFloat(value).toFixed(2) + \"%\"}\r\n      </text>\r\n    );\r\n  };\r\n  const ForecastedYearstooltip = ({ active, payload, label }) => {\r\n    if (active && payload !== null && payload.length !== 0) {\r\n      return (\r\n        <div className=\"barchart-tooltip\">\r\n          <div>\r\n            <span className=\"tooltip-label\">Sdf Accuracy : </span>\r\n            <span className=\"tooltip-value\">{payload[0].payload.fca_sdf}</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"tooltip-label\">Sdf Modified Accuracy : </span>\r\n            <span className=\"tooltip-value\">\r\n              {payload[0].payload.bias_enriched}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n  const CustomTooltip = ({ active, payload }) => {\r\n    if (active && payload !== null && payload.length !== 0) {\r\n      return (\r\n        <div>\r\n          <div>Demand:{payload[0].payload.demand_volume}</div>\r\n          <div>Deviation:{payload[0].payload.deviation}</div>\r\n          <div>Forecast:{payload[0].payload.forecast_qty}</div>\r\n          <div>\r\n            {payload[0].payload.category_type}:\r\n            {payload[0].payload.category_value}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n  const CustomtooltipForProducttype = ({ active, payload }) => {\r\n    if (active && payload !== null && payload.length !== 0) {\r\n      return (\r\n        <div className=\"barchart-tooltip\">\r\n          <div>\r\n            <span className=\"tooltip-label\">SDF Accuracy: </span>\r\n            <span className=\"tooltip-value\">{payload[0].payload.fca_sdf}</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"tooltip-label\">SDF Enriched Accuracy: </span>\r\n            <span className=\"tooltip-value\">\r\n              {payload[0].payload.fca_enriched}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  const CustomtooltipFordemandgraph = ({ active, payload }) => {\r\n    if (active && payload !== null && payload.length !== 0) {\r\n      return (\r\n        <div className=\"barchart-tooltip\">\r\n          <div>\r\n            <span className=\"tooltip-label\">Demand Volume: </span>\r\n            <span className=\"tooltip-value\">\r\n              {payload[0].payload.demand_volume}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className=\"tooltip-label\">SDF Accuracy: </span>\r\n            <span className=\"tooltip-value\">\r\n              {payload[0].payload.forecast_qty}\r\n            </span>\r\n          </div>\r\n\r\n          <div>\r\n            <span className=\"tooltip-label\">SDF Enriched Accuracy: </span>\r\n            <span className=\"tooltip-value\">\r\n              {payload[0].payload.forecast_enriched}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n  const colorStyles = {\r\n    placeholder: (defaultStyles) => {\r\n      return {\r\n        ...defaultStyles,\r\n        color: \"rgba(17, 125, 175, 1)\",\r\n      };\r\n    },\r\n  };\r\n  const changeChartvalue = (parameter) => {\r\n    let sortedArray = parameter\r\n      .filter((x) => x !== null)\r\n      .sort(function (a, b) {\r\n        a = new Date(a.demand_period);\r\n        b = new Date(b.demand_period);\r\n        return a - b;\r\n      });\r\n    return sortedArray;\r\n  };\r\n  useEffect(() => {\r\n    AdddeviationGraphdata();\r\n  }, [chooseGraphrelative, deviationGraphbind]);\r\n  const AdddeviationGraphdata = () => {\r\n    try {\r\n      if (deviationGraphbind !== undefined) {\r\n        if (chooseGraphrelative) {\r\n          dispatch(setDeviationgraphchange(deviationGraphbind.absolute));\r\n        } else {\r\n          dispatch(setDeviationgraphchange(deviationGraphbind.relative));\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  const renderLegend = (payload) => {\r\n    return (\r\n      <Row>\r\n        <Col sm={6} md={6} className=\"text-center\">\r\n          <span\r\n            className=\"border pe-2 ps-2 me-1\"\r\n            style={{ backgroundColor: \"rgba(146, 193, 47, 1)\" }}\r\n          ></span>\r\n          SDF-FORECAST&gt;DEMAND\r\n        </Col>\r\n        <Col sm={6} md={6} className=\"text-center\">\r\n          <span\r\n            className=\"border pe-2 ps-2 me-1\"\r\n            style={{ backgroundColor: \"rgba(4, 187, 241, 1)\" }}\r\n          ></span>\r\n          DEMAND&gt;SDF-FORECAST\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid\">\r\n        <Row className=\"p-2 mb-4\">\r\n          <Col sm={3} md={3} className=\"left-panel mb-2\">\r\n            <Row className=\"p-2\">\r\n              <Col sm={12} md={12} className=\"mt-2 mb-2\">\r\n                <span className=\"filter-label\">{t(\"AGGREGATION LEVEL\")}</span>\r\n                <Select\r\n                  options={DFUdropdown}\r\n                  placeholder={t(\"Select Aggregation Level\")}\r\n                  classNamePrefix=\"aggregate\"\r\n                  isClearable={true}\r\n                  styles={colorStyles}\r\n                  // className=\"dropAlinment\"\r\n                  value={selectedDfuvalue}\r\n                  onChange={(e) => {\r\n                    dispatch(setselectedDfuvalue(e));\r\n                  }}\r\n                  getOptionLabel={(e) => (\r\n                    <div className=\"w-100 addOptioncolor\">{e.text}</div>\r\n                  )}\r\n                ></Select>\r\n              </Col>\r\n              <Col sm={12} md={12} className=\"mt-2 mb-2\">\r\n                <span className=\"filter-label\">\r\n                  {t(\"LAGS FOR MEASUREMENT\")}\r\n                </span>\r\n                <Select\r\n                  options={lagsFormeasurement}\r\n                  placeholder={t(\"Lags for Measurement\")}\r\n                  classNamePrefix=\"lags\"\r\n                  isClearable={true}\r\n                  isMulti\r\n                  styles={colorStyles}\r\n                  value={lagsSelectedvalue}\r\n                  onChange={(e) => {\r\n                    dispatch(setlagsSelectedvalue(e));\r\n                  }}\r\n                  getOptionLabel={(e) => (\r\n                    <div className=\"w-100 addOptioncolor\">{e.value}</div>\r\n                  )}\r\n                ></Select>\r\n              </Col>\r\n              <Col sm={12} md={12} className=\"mt-2 mb-2\">\r\n                <span className=\"filter-label\">{t(\"SNAPSHOT TO ANALYZE\")}</span>\r\n                <Select\r\n                  options={snapShottoanalyze}\r\n                  placeholder={t(\"Select\") + \"...\"}\r\n                  isClearable={true}\r\n                  styles={colorStyles}\r\n                  classNamePrefix=\"snap\"\r\n                  value={snapShotselectedvalue}\r\n                  onChange={(e) => {\r\n                    dispatch(setsnapShotselectedvalue(e));\r\n                  }}\r\n                  getOptionLabel={(e) => (\r\n                    <div className=\"w-100 addOptioncolor\">\r\n                      {e.snapshotvalue}\r\n                    </div>\r\n                  )}\r\n                ></Select>\r\n              </Col>\r\n\r\n              <Col sm={12} md={12} className=\"mt-2 mb-2\">\r\n                <span className=\"filter-label\">{t(\"CATEGORY\")}</span>\r\n                <Select\r\n                  options={productCategory}\r\n                  placeholder={t(\"Select\") + \"...\"}\r\n                  classNamePrefix=\"category\"\r\n                  isClearable={true}\r\n                  styles={colorStyles}\r\n                  value={selectedProduct}\r\n                  onChange={(e) => {\r\n                    ProductDepedencyDropdown(e);\r\n                  }}\r\n                  getOptionLabel={(e) => (\r\n                    <div className=\"w-100 addOptioncolor\">{e.productValue}</div>\r\n                  )}\r\n                ></Select>\r\n              </Col>\r\n\r\n              <Col sm={12} md={12} className=\"mt-2 mb-2\">\r\n                <span className=\"filter-label\">\r\n                  {t(\"CURRENTLY SELECTED CATEGORY\")}\r\n                </span>\r\n                <Select\r\n                  options={productDepenedency}\r\n                  placeholder={t(\"Select\") + \"...\"}\r\n                  classNamePrefix=\"current\"\r\n                  isClearable={true}\r\n                  styles={colorStyles}\r\n                  isMulti\r\n                  value={selectedDepdency}\r\n                  onChange={(e) => {\r\n                    dispatch(setselectedDepdency(e));\r\n                  }}\r\n                  getOptionLabel={(e) =>\r\n                    e !== undefined && e.value !== undefined ? (\r\n                      <div className=\"w-100 addOptioncolor\">{e.value}</div>\r\n                    ) : null\r\n                  }\r\n                ></Select>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col sm={9} md={9} className=\"mb-2\">\r\n            <Row>\r\n              <Col sm={12} md={12}>\r\n                <span className=\"card-heading\">{t(\"REPORT CHARTS\")}</span>\r\n              </Col>\r\n              <Col sm={12} md={12}>\r\n                <div className=\"border shadow\">\r\n                  <Row className=\"p-4\">\r\n                    <Col sm={6} md={6} className=\"text-center\">\r\n                      <div className=\"addManualmarginstart\">\r\n                        {showSdf + \"%\"}\r\n                      </div>\r\n                      <div className=\"value-label\">\r\n                        {t(\"SDF FORECAST ACCURACY\")}\r\n                      </div>\r\n                    </Col>\r\n                    <Col sm={6} md={6} className=\"text-center\">\r\n                      <div className=\"addmarginStartValue\">\r\n                        {showSdfmodified + \"%\"}\r\n                      </div>\r\n                      <div className=\"value-label\">\r\n                        {t(\"SDF MODIFIED ACCURACY\")}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row className=\"mt-4\">\r\n              <Col sm={6} md={6}>\r\n                <Row>\r\n                  <Col sm={12} md={12}>\r\n                    <span className=\"card-heading\">\r\n                      {t(\"ACCURACY FOR FORCASTED YEARS\")}\r\n                    </span>\r\n                  </Col>\r\n\r\n                  <Col sm={12} md={12}>\r\n                    <div className=\"border shadow\">\r\n                      <ResponsiveContainer width=\"100%\" height={345}>\r\n                        <BarChart\r\n                          width={600}\r\n                          height={600}\r\n                          margin={{\r\n                            top: 20,\r\n                            right: 10,\r\n                            left: 5,\r\n                            bottom: 5,\r\n                          }}\r\n                          style={{ fontSize: \"12px\" }}\r\n                          data={\r\n                            accuracyForecastyearsgraph !== undefined &&\r\n                            accuracyForecastyearsgraph.result !== undefined &&\r\n                            accuracyForecastyearsgraph.result.length > 0\r\n                              ? changeChartvalue(\r\n                                  accuracyForecastyearsgraph.result\r\n                                )\r\n                              : []\r\n                          }\r\n                        >\r\n                          <Legend />\r\n                          <Bar\r\n                            name=\"SDF Accuracy\"\r\n                            dataKey=\"fca_sdf\"\r\n                            fill=\"rgba(146, 193, 47, 1)\"\r\n                            label={renderCustomBarlabel}\r\n                          />\r\n                          <Bar\r\n                            name=\"SDF Enriched Accuracy\"\r\n                            dataKey=\"bias_enriched\"\r\n                            fill=\"rgba(4, 187, 241, 1)\"\r\n                            label={renderCustomBarlabel}\r\n                          />\r\n                          <Tooltip\r\n                            cursor={false}\r\n                            content={<ForecastedYearstooltip />}\r\n                          />\r\n                          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" />\r\n                          <XAxis\r\n                            className=\"chart-x-axis\"\r\n                            dataKey=\"demand_period\"\r\n                            padding={{ left: 10, right: 10 }}\r\n                          />\r\n                          <YAxis className=\"chart-x-axis\" />\r\n                        </BarChart>\r\n                      </ResponsiveContainer>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n\r\n              <Col sm={6} md={6}>\r\n                <Col sm={12} md={12}>\r\n                  <span className=\"card-heading\">\r\n                    {t(\"DEMAND VOLUME AND FORECAST CHART\")}\r\n                  </span>\r\n                </Col>\r\n                <Col sm={12} md={12}>\r\n                  <div className=\"border shadow\">\r\n                    <Row className=\"justify-content-center\">\r\n                      <Col sm={6} md={6}>\r\n                        <div>\r\n                          <div className=\"allFontcolor chooseGraph\">\r\n                            {t(\"Choose A Graph\")}\r\n                          </div>\r\n                        </div>\r\n                        <Row>\r\n                          <Col sm={6} md={6}>\r\n                            <Stack\r\n                              className=\"justify-content-center align-items-center\"\r\n                              direction=\"horizontal\"\r\n                              gap={2}\r\n                            >\r\n                              <div>\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  className=\"form-check-input radioButton1\"\r\n                                  checked={chooseGraphrelative}\r\n                                  onClick={() => {\r\n                                    dispatch(chooseGraphrelativeFunc(true));\r\n                                  }}\r\n                                />\r\n                              </div>\r\n                              <div>\r\n                                <label className=\"ms-1 productType\">\r\n                                  {t(\"Absolute\")}\r\n                                </label>\r\n                              </div>\r\n                            </Stack>\r\n                          </Col>\r\n\r\n                          <Col sm={6} md={6}>\r\n                            <Stack\r\n                              className=\"justify-content-center align-items-center\"\r\n                              direction=\"horizontal\"\r\n                              gap={2}\r\n                            >\r\n                              <div>\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  className=\"form-check-input radioButton2\"\r\n                                  checked={!chooseGraphrelative}\r\n                                  onClick={(e) => {\r\n                                    dispatch(chooseGraphrelativeFunc(false));\r\n                                  }}\r\n                                />\r\n                              </div>\r\n                              <div>\r\n                                <label className=\"ms-1 allFontcolor\">\r\n                                  {t(\"Relative\")}\r\n                                </label>\r\n                              </div>\r\n                            </Stack>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                    <ResponsiveContainer width=\"90%\" height={300}>\r\n                      <BarChart\r\n                        width={600}\r\n                        height={600}\r\n                        margin={{\r\n                          top: 20,\r\n                          right: 10,\r\n                          left: 5,\r\n                          bottom: 5,\r\n                        }}\r\n                        style={{ fontSize: \"12px\" }}\r\n                        data={deviationGraphbindvalue!==undefined?deviationGraphbindvalue:[]}\r\n                      >\r\n                        <Bar dataKey=\"deviation\" fill=\"rgba(146, 193, 47, 1)\">\r\n                          {deviationGraphbindvalue!==undefined?deviationGraphbindvalue.map((entry) => (\r\n                            <Cell\r\n                              fill={\r\n                                Number(entry.demand_volume) >\r\n                                Number(entry.forecast_qty)\r\n                                  ? \"rgba(4, 187, 241, 1)\"\r\n                                  : \"rgba(146, 193, 47, 1)\"\r\n                              }\r\n                            />\r\n                          )):null}\r\n                        </Bar>\r\n                        <Legend content={renderLegend} />\r\n                        <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" />\r\n                        <Tooltip cursor={false} content={<CustomTooltip />} />\r\n                        <XAxis\r\n                          className=\"chart-x-axis\"\r\n                          dataKey=\"category_value\"\r\n                          display=\"none\"\r\n                        />\r\n                        <YAxis\r\n                          className=\"chart-x-axis\"\r\n                          tickFormatter={formatyaxis}\r\n                        />\r\n                      </BarChart>\r\n                    </ResponsiveContainer>\r\n                  </div>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row className=\"mt-4\">\r\n              <Col sm={12} md={12}>\r\n                <span className=\"card-heading\">\r\n                  {t(\"ACCURACY PER SELECTED CATEGORY\")}:{\" \"}\r\n                  <span className=\"productType\">{t(\"PRODUCT TYPE\")}</span>\r\n                </span>\r\n              </Col>\r\n\r\n              <Col sm={12} md={12}>\r\n                <div className=\"border shadow\">\r\n                  <ResponsiveContainer width=\"100%\" height={345}>\r\n                    <BarChart\r\n                      width={600}\r\n                      height={600}\r\n                      margin={{\r\n                        top: 20,\r\n                        right: 10,\r\n                        left: 5,\r\n                        bottom: 5,\r\n                      }}\r\n                      style={{ fontSize: \"12px\" }}\r\n                      data={productDependentgraph}\r\n                    >\r\n                      <Legend />\r\n                      <Bar\r\n                        name=\"SDF Accuracy\"\r\n                        dataKey=\"bias_lfh\"\r\n                        fill=\"rgba(146, 193, 47, 1)\"\r\n                        label={renderCustomBarlabel}\r\n                      ></Bar>\r\n                      <Bar\r\n                        name=\"SDF Enriched Accuracy\"\r\n                        dataKey=\"fca_sdf\"\r\n                        fill=\"rgba(4, 187, 241, 1)\"\r\n                        label={renderCustomBarlabel}\r\n                      ></Bar>\r\n                      <Tooltip\r\n                        cursor={false}\r\n                        content={CustomtooltipForProducttype}\r\n                      />\r\n                      <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" />\r\n                      <XAxis\r\n                        className=\"chart-x-axis\"\r\n                        type=\"category\"\r\n                        id=\"important\"\r\n                        dataKey=\"category_value\"\r\n                        padding={{ left: 10, right: 10 }}\r\n                      />\r\n                      <YAxis className=\"chart-x-axis\" type=\"number\" />\r\n                    </BarChart>\r\n                  </ResponsiveContainer>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row className=\"mt-4\">\r\n              <Col sm={12} md={12}>\r\n                <span className=\"card-heading\">\r\n                  {t(\"DEMAND AND FORECAST VOLUMES PER MONTH\")}\r\n                </span>\r\n              </Col>\r\n\r\n              <Col sm={12} md={12}>\r\n                <div className=\"border shadow\">\r\n                  <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <LineChart\r\n                      width={1200}\r\n                      id=\"lineChartcomponent\"\r\n                      height={300}\r\n                      margin={{\r\n                        top: 20,\r\n                        right: 10,\r\n                        left: 5,\r\n                        bottom: 5,\r\n                      }}\r\n                      style={{ fontSize: \"12px\" }}\r\n                      data={\r\n                        demandGraphbind !== undefined &&\r\n                        demandGraphbind.length > 0\r\n                          ? changeChartvalue(demandGraphbind)\r\n                          : []\r\n                      }\r\n                    >\r\n                      <Legend />\r\n                      <XAxis className=\"chart-x-axis\" dataKey=\"demand_period\" />\r\n                      <YAxis\r\n                        className=\"chart-x-axis\"\r\n                        tickFormatter={formatyaxis1}\r\n                      />\r\n                      <Tooltip content={<CustomtooltipFordemandgraph />} />\r\n                      <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\" />\r\n                      <Line\r\n                        name=\"Demand Volume\"\r\n                        type=\"monotone\"\r\n                        dataKey=\"demand_volume\"\r\n                        stroke=\"#92C12F\"\r\n                      />\r\n                      <Line\r\n                        name=\"SDF Accuracy\"\r\n                        type=\"monotone\"\r\n                        dataKey=\"forecast_qty\"\r\n                        stroke=\"#04BBF1\"\r\n                      />\r\n                      <Line\r\n                        name=\"SDF Enriched Accuracy\"\r\n                        type=\"monotone\"\r\n                        dataKey=\"forecast_enriched\"\r\n                        stroke=\"#FF0000\"\r\n                      />\r\n                    </LineChart>\r\n                  </ResponsiveContainer>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n      {/* < div className=\"container-fluid\" >\r\n                <div className=\"row addMtopForecast\">\r\n                    <div className=\"col-sm-4\"></div>\r\n                    <div className=\"col-sm-8 addReportfontSize\">\r\n                        {t('REPORT CHARTS')}\r\n                    </div>\r\n                </div>\r\n                <div className='row addMarginTopforagrregration'>\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4 text-align\">\r\n                                <div className='border addPaddingstartforaggregationbox'>\r\n                                    <div className=\"row addFontsizeofaggregation\">\r\n                                        {t('AGGREGATION LEVEL')}\r\n                                    </div>\r\n                                    <div className=\"row w-100\">\r\n                                        <Select options={DFUdropdown}\r\n                                            placeholder={t(\"Select Aggregation Level\")}\r\n                                            classNamePrefix=\"aggregate\"\r\n                                            isClearable={true}\r\n                                            styles={colorStyles}\r\n                                            className=\"dropAlinment\"\r\n                                            value={selectedDfuvalue}\r\n                                            onChange={(e) => {\r\n                                                setselectedDfuvalue(e)\r\n                                            }}\r\n                                            getOptionLabel={e => (\r\n                                                <div className=\"w-100 addOptioncolor\">\r\n                                                    {e.text}\r\n                                                </div>\r\n                                            )}\r\n                                        ></Select>\r\n                                    </div>\r\n                                    <div className=\"row addFontsizeofaggregation\">\r\n                                        {t('LAGS FOR MEASUREMENT')}\r\n                                    </div>\r\n                                    <div className=\"row w-100\">\r\n                                        <Select options={lagsFormeasurement}\r\n                                            placeholder={t('Lags for Measurement')}\r\n                                            classNamePrefix=\"lags\"\r\n                                            isClearable={true}\r\n                                            isMulti\r\n                                            className=\"dropAlinment\"\r\n                                            styles={colorStyles}\r\n                                            value={lagsSelectedvalue}\r\n                                            onChange={(e) => {\r\n                                                dispatch(setlagsSelectedvalue(e))\r\n                                            }}\r\n                                            getOptionLabel={e => (\r\n                                                <div className=\"w-100 addOptioncolor\">\r\n                                                    {e.value}\r\n                                                </div>\r\n\r\n                                            )}\r\n                                        ></Select>\r\n\r\n                                    </div>\r\n                                    <div className=\"row  addFontsizeofaggregation\">{t('SNAPSHOT TO ANALYZE')}</div>\r\n                                    <div className=\"row w-100\">\r\n                                        <Select options={snapShottoanalyze}\r\n                                            placeholder={t('Select') + '...'}\r\n                                            isClearable={true}\r\n                                            styles={colorStyles}\r\n                                            classNamePrefix=\"snap\"\r\n                                            className=\"dropAlinment\"\r\n                                            value={snapShotselectedvalue}\r\n                                            onChange={(e) => {\r\n                                                dispatch(setsnapShotselectedvalue(e))\r\n                                            }\r\n                                            }\r\n                                            getOptionLabel={e => (\r\n                                                <div className=\"w-100 addOptioncolor\">\r\n                                                    {e.snapshotvalue}\r\n                                                </div>\r\n                                            )}\r\n                                        ></Select>\r\n                                    </div>\r\n                                    <div className=\"row addFontsizeofaggregation\">{t('CATEGORY')}</div>\r\n                                    <div className=\"row w-100\">\r\n                                        <Select options={productCategory}\r\n                                            placeholder={t('Select') + '...'}\r\n                                            classNamePrefix=\"category\"\r\n                                            isClearable={true}\r\n                                            styles={colorStyles}\r\n                                            className=\"dropAlinment\"\r\n                                            value={selectedProduct}\r\n                                            onChange={(e) => { ProductDepedencyDropdown(e) }}\r\n                                            getOptionLabel={e => (\r\n                                                <div className=\"w-100 addOptioncolor\">\r\n                                                    {e.productValue}\r\n                                                </div>\r\n                                            )}\r\n                                        ></Select>\r\n                                    </div>\r\n                                    <div className=\"row addFontsizeofaggregation\">{t('CURRENTLY SELECTED CATEGORY')}</div>\r\n                                    <div className=\"row w-100\">\r\n                                        <Select options={productDepenedency}\r\n                                            placeholder={t('Select') + '...'}\r\n                                            classNamePrefix=\"current\"\r\n                                            isClearable={true}\r\n                                            styles={colorStyles}\r\n                                            isMulti\r\n                                            value={selectedDepdency}\r\n                                            className=\"dropAlinment\"\r\n                                            onChange={(e) => {\r\n                                                dispatch(setselectedDepdency(e));\r\n                                            }}\r\n                                            getOptionLabel={e => (\r\n                                                e !== undefined && e.value !== undefined ?\r\n                                                    <div className=\"w-100 addOptioncolor\">\r\n                                                        {e.value}\r\n                                                    </div> : null\r\n                                            )}\r\n                                        ></Select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-8\">\r\n                                <div className='row border me-2 pt-5 pb-5 shadow mobileView3'>\r\n                                    <div className=\"col-md-6 text-center\">\r\n                                        <div className='addManualmarginstart'>{showSdf + '%'}</div>\r\n                                        <div className='fontsize w-100 addingMarginstartforData '>{t('SDF FORECAST ACCURACY')}</div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 text-center\">\r\n                                        <div className='addmarginStartValue'>{showSdfmodified + '%'}</div>\r\n                                        <div className='fontsize w-100'>{t('SDF MODIFIED ACCURACY')}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='row'>\r\n                                    <div className='addAccuracydata '>\r\n                                        {t('ACCURACY FOR FORCASTED YEARS')}\r\n                                    </div>\r\n                                </div>\r\n                                <div className='row  border shadow me-3'>\r\n                                    <div className='col-md-6 addMargintopForgraphmentioner '><div className='border mt-2 pt-2 pe-3 text-md-end borderWidth float-start addManualmarginstart sdfForecastcolor'></div><span className='ms-2 addsdg1font'>{t('SDF Accuracy')}</span></div>\r\n                                    <div className='col-md-6 addMargintopForgraphmentioner '><div className='border mt-2 pt-2 pe-3 borderWidth float-start addManualStart sdfEnrichedaccuracy'></div><span className='ms-2 addsdg1font '>{t('SDF Enriched Accuracy')}</span></div>\r\n                                    <div className='row'>\r\n                                        <div className='col-sm-12 addPaddingleft addMargintopfortheBargraph'>\r\n\r\n                                            <ResponsiveContainer width=\"90%\" height={400}>\r\n                                                <BarChart width={600} id=\"baronechart\" height={600} data={accuracyForecastyearsgraph !== undefined ? accuracyForecastyearsgraph.result : []}>\r\n                                                    <Bar dataKey=\"fca_sdf\" fill=\"rgba(146, 193, 47, 1)\r\n\" label={renderCustomBarlabel} />\r\n                                                    <Bar dataKey=\"bias_enriched\" fill=\"rgba(4, 187, 241, 1)\r\n\" label={renderCustomBarlabel} />\r\n                                                    <Tooltip content={<ForecastedYearstooltip />} />\r\n                                                    <CartesianGrid stroke=\"#ccc\" />\r\n                                                    <XAxis dataKey=\"demand_period\" />\r\n                                                    <YAxis />\r\n                                                </BarChart>\r\n                                            </ResponsiveContainer>\r\n                                        </div>\r\n                                    </div >\r\n                                </div >\r\n\r\n                                <div className='row addmtopForaccuracy '>\r\n                                    <div className='row '>\r\n                                        <div className='col-sm-6 addFontattributeforhead '>\r\n                                            <div className='Single-Line-Text mobileView5'> {t('ACCURACY PER SELECTED CATEGORY')}: <span className='productType'>{t('PRODUCT TYPE')}</span></div>\r\n                                            <div className='col-sm-12 mt-4  addChartmargintop border shadow'>\r\n                                                <div className='row'>\r\n                                                    <div className='col-sm-5'><div className='border pt-2 pe-3 borderWidth float-start addMargintopforsdfForecast ms-2 sdfForecastcolor'></div>\r\n                                                        <div className='addmarginSdfaccuracy '>{t('SDF Accuracy')}</div>\r\n                                                    </div>\r\n                                                    <div className='col-sm-7'>\r\n                                                        <div className='border pt-2 pe-3 borderWidth float-start addMargintopforsdfForecast ms-2 sdfEnrichedaccuracy'></div>\r\n                                                        <div className='addmarginSdfEnaccuracy allFontcolor'>{t('SDF Enriched Accuracy')}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='row addFontattributeforheads'>\r\n                                                    <ResponsiveContainer width=\"90%\" height={400}>\r\n                                                        <BarChart id='bartwochart'\r\n                                                            width={500}\r\n                                                            height={300}\r\n                                                            data={productDependentgraph}\r\n                                                            margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n                                                            layout='vertical'\r\n                                                        >\r\n                                                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                                            <XAxis type='number' />\r\n                                                            <YAxis type='category' id='important' dataKey='category_value' />\r\n                                                            <Bar dataKey='bias_lfh' fill='rgba(4, 187, 241, 1)' >\r\n                                                                <LabelList dataKey=\"fca_enriched\" content={renderCustomizedLabel} position=\"insideRight\" style={{ fill: \"white\" }} />\r\n                                                            </Bar>\r\n                                                            <Bar dataKey='fca_sdf' fill='rgba(146, 193, 47, 1)'>\r\n                                                                <LabelList dataKey=\"bias_acn\" content={renderCustomizedLabel} position=\"insideRight\" style={{ fill: \"white\" }} />\r\n                                                            </Bar>\r\n                                                            <Tooltip content={CustomtooltipForProducttype} />\r\n                                                        </BarChart>\r\n                                                    </ResponsiveContainer>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='col-sm-6 mobileView6  addFontattributeforhead'>\r\n                                            <div className='row mobileView7'> {t('DEMAND AND FORECAST VOLUMES PER MONTH')}</div>\r\n                                            <div className='col-sm-12  margingraphtop  border shadow '>\r\n\r\n                                                <div className='row addFontattributeforheads'>\r\n                                                    <div className='col-sm-6  addImportantpadleft'>\r\n                                                        <div className='border manualWidth margintopforround float-start sdfForecastcolor pt-1 pb-1 addMarginimportanttop'></div>\r\n                                                        <div className='border margintopped float-start sdfForecastcolor addwidthtoLine'></div>\r\n                                                        <div className='border manualWidth margintopforround float-start sdfForecastcolor pt-1 pb-1 addMarginimportanttop'></div>\r\n                                                        <div className='margintopForsdfAccuracy'>{t('Demand Volume')}</div>\r\n                                                    </div>\r\n                                                    <div className='col-sm-6 mobileView8 '>\r\n                                                        <div className='border manualWidth margintopforround float-start sdfEnrichedaccuracy pt-1 pb-1 addMarginimportanttop'></div>\r\n                                                        <div className='border margintopped float-start sdfEnrichedaccuracy'></div>\r\n                                                        <div className='border manualWidth margintopforround float-start sdfEnrichedaccuracy pt-1 pb-1 addMarginimportanttop'></div>\r\n                                                        <div className='margintopForsdfAccuracy'>{t('SDF Enriched Accuracy')}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='row addFontattributeforheads'>\r\n                                                    <ResponsiveContainer width=\"90%\" height={400}>\r\n                                                        <LineChart width={1200} id=\"lineChartcomponent\" height={300} data={demandGraphbind}>\r\n                                                            <XAxis dataKey=\"demand_period\" />\r\n                                                            <YAxis tickFormatter={formatyaxis1} />\r\n                                                            <Tooltip content={<CustomtooltipFordemandgraph />} />\r\n                                                            <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\" />\r\n                                                            <Line type=\"monotone\" dataKey=\"demand_volume\" stroke=\"#92C12F\" />\r\n                                                            <Line type=\"monotone\" dataKey=\"bias_enriched\" stroke=\"#04BBF1\" />\r\n                                                        </LineChart>\r\n                                                    </ResponsiveContainer>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div className='col-sm-12'>\r\n                                        <div className='row mt-5 ms-1 addDemandvolumedatafont fw-bolder allFontcolor'>\r\n                                            {t('DEMAND VOLUME AND FORECAST CHART')}\r\n                                        </div>\r\n                                        <div className='col-sm-12 border shadow'>\r\n                                            <div className='row mt-3'>\r\n                                                <div className='col-sm-2'></div>\r\n                                                <div className='col-sm-3 addotherChoosegraph'>\r\n                                                    <div className='border borderWidth pt-2 pe-2 float-start sdfForecastcolor mt-1 me-1'></div>\r\n                                                    <div className='sdfFontsize allFontcolor'>{t('Demand Volume>SDF-FORECAST')}</div>\r\n                                                </div>\r\n                                                <div className='col-sm-3 addotherChoosegraph'>\r\n                                                    <div className='border borderWidth pt-2 pe-2 float-start sdfEnrichedaccuracy mt-1 me-1'></div>\r\n                                                    <div className='sdfFontsize allFontcolor'>{t('SDF-FORECAST>Demand Volume')}</div>\r\n                                                </div>\r\n                                                <div className='col-sm-4 mobileView4'>\r\n                                                    <div className='row allFontcolor chooseGraph'>{t('Choose A Graph')}</div>\r\n                                                    <div className='col-sm-12 displayAbsrel'>\r\n                                                        <div className='col-sm-6 '>\r\n                                                            <input type='radio' className='form-check-input radioButton1' checked={chooseGraphrelative} onClick={() => { dispatch(chooseGraphrelativeFunc(true)) }} />\r\n                                                            <label className='ms-1 productType' >{t('Absolute')}</label>\r\n                                                        </div>\r\n                                                        <div className='col-sm-6'>\r\n                                                            <input type='radio' className='form-check-input radioButton2' checked={!chooseGraphrelative} onClick={(e) => { dispatch(chooseGraphrelativeFunc(false)) }} />\r\n                                                            <label className='ms-1 allFontcolor'>{t('Relative')}</label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='row mt-3 addmarginlastLeft '>\r\n                                                <ResponsiveContainer width=\"90%\" height={400}>\r\n                                                    <BarChart id=\"barthreechart\" width={600} height={600} data={deviationGraphbindvalue}>\r\n                                                        <Bar dataKey=\"deviation\" fill=\"rgba(146, 193, 47, 1)\">\r\n                                                            {\r\n                                                                deviationGraphbindvalue.map((entry, index) => (\r\n                                                                    <Cell fill={entry.demand_volume > entry.forecast_qty ? 'rgba(4, 187, 241, 1)' : 'rgba(146, 193, 47, 1)'} />\r\n                                                                ))}\r\n                                                        </Bar>\r\n                                                        <CartesianGrid stroke=\"#ccc\" />\r\n                                                        <Tooltip content={<CustomTooltip />} />\r\n                                                        <XAxis dataKey=\"category_value\" />\r\n                                                        <YAxis tickFormatter={formatyaxis} />\r\n                                                    </BarChart>\r\n                                                </ResponsiveContainer>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div >\r\n\r\n                        </div >\r\n                    </div >\r\n                </div >\r\n            </div > */}\r\n    </>\r\n  );\r\n};\r\nexport default ForCastmaincomponent;\r\n"],"names":["Cell","_props","displayName","_typeof","obj","Symbol","iterator","constructor","prototype","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","_extends","assign","arguments","hasOwnProperty","apply","this","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_isNativeReflectConstruct","result","Super","_getPrototypeOf","NewTarget","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","getPrototypeOf","Bar","_PureComponent","subClass","superClass","create","_inherits","protoProps","staticProps","_super","_this","_len","args","Array","_key","concat","state","isAnimationFinished","id","uniqueId","handleAnimationEnd","onAnimationEnd","setState","handleAnimationStart","onAnimationStart","nextProps","prevState","animationId","prevAnimationId","curData","data","prevData","option","React","_isFunction","Rectangle","_this2","shape","baseProps","filterProps","map","entry","index","Layer","className","adaptEventsOfChild","renderRectangle","_this3","_this$props","layout","isAnimationActive","animationBegin","animationDuration","animationEasing","Animate","begin","duration","isActive","easing","from","t","to","_ref","stepData","prev","interpolatorX","interpolateNumber","x","interpolatorY","y","interpolatorWidth","width","interpolatorHeight","height","h","_interpolatorHeight","w","interpolator","renderRectanglesStatically","_this$props2","_isEqual","renderRectanglesWithAnimation","_this4","backgroundProps","background","rest","fill","_this$props3","xAxis","yAxis","children","errorBarItems","findAllByType","ErrorBar","offset","dataPointFormatter","dataPoint","dataKey","errorVal","getValueByDataKey","item","_this$props4","hide","left","top","layerClass","classNames","needClip","allowDataOverflow","clipPathId","_isNil","clipPath","renderBackground","renderRectangles","renderErrorBar","LabelList","PureComponent","defaultProps","xAxisId","yAxisId","legendType","minPointSize","Global","getComposedData","_ref2","barPosition","bandSize","xAxisTicks","yAxisTicks","stackedData","dataStartIndex","displayedData","pos","findPositionOfBar","_item$props","numericAxis","stackedDomain","scale","domain","baseValue","getBaseValueOfBar","cells","rects","truncateByDomain","_isArray","getCateCoordinateOfBar","axis","ticks","size","Math","abs","delta","mathSign","payload","tooltipPayload","getTooltipItem","tooltipPosition","BarChart","generateCategoricalChart","chartName","GraphicalChild","defaultTooltipEventType","validateTooltipEventTypes","axisComponents","axisType","AxisComp","XAxis","YAxis","formatAxisMap","accessToken","window","sessionStorage","getItem","chooseGraphrelativeFunc","parameter","dispatch","type","FORECAST_DATA_TYPES","setDeviationgraphchange","setselectedProduct","setselectedDepdency","setproductDepenedency","setsnapShotselectedvalue","setlagsSelectedvalue","setselectedDfuvalue","ForCastmaincomponent","useDispatch","useSelector","categoryDropdown","forecastAccurateReducer","accuracyForecastyearsgraph","forecastDataresponse","productDependentgraph","productGraph","demandGraphbind","demandGraph","deviationGraphbind","deviationGraph","chooseGraphrelative","showSdf","showSdfmodified","deviationGraphbindvalue","selectedProduct","selectedDepdency","productDepenedency","productCategory","snapShotselectedvalue","snapShottoanalyze","lagsSelectedvalue","lagsFormeasurement","selectedDfuvalue","DFUdropdown","useTranslation","i18n","useEffect","changeLanguage","url","URLConfig","axios","headers","response","console","log","lagsValuemanipulation","lagValue","valueArr","val","selectedcategryValuechange","categoryVal","cateGoval","Categorydataapistatus","undefined","status","toast","message","reqbody","filters","aggregationLevel","text","LagsofMeasurement","snapshottoAnalyse","snapshotvalue","demandVolumeforecastgraph","demandDeviationforecastgraph","category","DfuFilterinitialLoad","arrayData","dfuValdropdown","String","toLowerCase","objectVariable","LagsDropdowninitialLoad","LagsValuedropdown","lags","sort","a","b","SnapshottoAnalyseinitailLoad","snapShotValue","snapShot","sortedSnapshot","Date","categoryDepedencyInitialloadfilters","cartegoryTypeautoselect","defaultSelectedarray","objetVariable","productValue","depedencyValue","arr","CategoryResponse","categoryVaraible","getFiltererroHandler","lag0value","fca_sdf","showSdfmodifiedset","bias_enriched","renderCustomBarlabel","textAnchor","dy","Number","parseFloat","toFixed","ForecastedYearstooltip","active","label","CustomTooltip","demand_volume","deviation","forecast_qty","category_type","category_value","CustomtooltipFordemandgraph","forecast_enriched","colorStyles","placeholder","defaultStyles","color","changeChartvalue","demand_period","AdddeviationGraphdata","absolute","relative","Row","Col","sm","md","options","classNamePrefix","isClearable","styles","onChange","getOptionLabel","isMulti","arrayValue","ProductDepedencyDropdown","ResponsiveContainer","margin","right","bottom","style","fontSize","Legend","name","Tooltip","cursor","content","CartesianGrid","stroke","strokeDasharray","padding","Stack","direction","gap","checked","onClick","backgroundColor","display","tickFormatter","fca_enriched","LineChart","Line"],"sourceRoot":""}