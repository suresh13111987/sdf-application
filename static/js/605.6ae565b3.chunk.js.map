{"version":3,"file":"static/js/605.6ae565b3.chunk.js","mappings":"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","sources":["Component/Header/index.js","Pages/SDFRoutes/index.js","redux/Actions/LoginData/index.js"],"sourcesContent":["import { useNavigate, useLocation } from \"react-router-dom\";\r\nimport \"../../css/Headercss.css\";\r\nimport \"../../css/mobileresponsive.css\";\r\nimport \"../../css/Loginpage.css\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { actionChangepassword } from \"../../redux/Actions/LoginData\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faKey, faXmark, faArrowRightFromBracket } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// import { faUser, faLock, faEnvelope, faArrowRightToBracket } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport _ from 'lodash'\r\nimport{toast} from 'react-toastify';\r\n\r\nexport const Header = () => {\r\n  const currentURL = window.location.pathname;\r\n  const { t, i18n } = useTranslation();\r\n  const [changePassword, setchangePassword] = useState(false);\r\n  const [confirmPassword, setconfirmPassword] = useState('');\r\n  const [newPassword, setnewPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    i18n.changeLanguage(window.sessionStorage.getItem('language'));\r\n  }, []);\r\n  const { changePasswordres } = useSelector((state) => ({ changePasswordres: state.loginDataReducer.loginfetchStateresponse.data }), shallowEqual);\r\n  useEffect(() => {\r\n    if (changePasswordres !== undefined) {\r\n      if (changePasswordres.status===undefined)\r\n      {\r\n      if (changePasswordres.success === true) {\r\n        alert('Please login again');\r\n        sessionStorage.clear();\r\n        window.location.replace('/');\r\n        setchangePassword(false);\r\n      }\r\n    }\r\n    else if(changePasswordres.status===false)\r\n    {\r\n      toast.error(\"Enter new password and confirm password properly\");\r\n    }\r\n    }\r\n  }, [changePasswordres])\r\n\r\n  const navigate = useNavigate();\r\n  const FormHeader = props => (\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-11\">\r\n        <h2 id=\"headerTitle\">{props.title}</h2>\r\n      </div>\r\n      <div className=\"col-sm-1 pt-4 pe-3\">\r\n        <button className=\"btn-close\" onClick={() => { setchangePassword(false) }}></button>\r\n      </div>\r\n    </div>\r\n  );\r\n  const changePasswordflow = () => {\r\n    if (newPassword === confirmPassword) {\r\n      dispatch(actionChangepassword({ password: newPassword, email: window.sessionStorage.getItem('username'), token: window.sessionStorage.getItem('accesstoken') }))\r\n\r\n    }\r\n    else {\r\n      alert('Confirm password and new password are not same');\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Modal isOpen={changePassword} id=\"modalvalue\">\r\n        <Row className=\"m-0\">\r\n          <Col sm={8} md={8} className=\"p-0\">\r\n            <img src=\"images/loginPageimg.png\" className=\"changepass-img\" alt=\"loginLogo\" />\r\n          </Col>\r\n          <Col sm={4} md={4} style={{ position: 'relative' }}>\r\n            <Row>\r\n              <Col sm={12} md={12}>\r\n                <span className=\"close-pass-btn\" onClick={() => setchangePassword(false)}>\r\n                  <FontAwesomeIcon icon={faXmark} color=\"#484036\" style={{ fontSize: '22px' }} />\r\n                </span>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"p-4 mt-4\">\r\n              <Col sm={12} md={12} className=\"mt-5\">\r\n                <p className=\"change-password-heading text-center\">{t('Change Password')}</p>\r\n              </Col>\r\n\r\n              <Col sm={12} md={12} className=\"mt-5\">\r\n                <label>{t('New Password')}</label>\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder={t('Enter your new password')}\r\n                  className=\"w-100 pt-2 pb-2 ps-2 addBorderradiusforinputs\"\r\n                  onChange={(e) => { setnewPassword(e.target.value) }}\r\n                />\r\n              </Col>\r\n\r\n              <Col sm={12} md={12} className=\"mt-5\">\r\n                <label>{t('Confirm Password')}</label>\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder={t('Enter confirm password')}\r\n                  className=\"w-100 pt-2 pb-2 ps-2 addBorderradiusforinputs\"\r\n                  onChange={(e) => { setconfirmPassword(e.target.value) }}\r\n                />\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col sm={12} md={12} className=\"change-pass-row\">\r\n                <Button variant=\"info\" className=\"change-pass-btn\" onClick={() => { changePasswordflow() }}>{t('Submit')}</Button>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n        {/* <div id=\"loginform\">\r\n          <FormHeader title={t('Change Password')}></FormHeader>\r\n          <div className=\"addMarginleftforpopup\">\r\n            <div class=\"row w-75\" id=\"inputClass\">\r\n              <label>{t('New Password')}</label>\r\n              <input type=\"password\" placeholder={t('Enter your new password')} onChange={(e) => { setnewPassword(e.target.value) }} />\r\n            </div>\r\n            <div class=\"row w-75\" id=\"inputClass\">\r\n              <label>{t('Confirm Password')}</label>\r\n              <input type=\"text\" placeholder={t('Enter confirm password')} onChange={(e) => { setconfirmPassword(e.target.value) }} />\r\n              <div class=\"row w-75 \" >\r\n                <button id=\"button\" onClick={() => { changePasswordflow() }}>{t('Submit')}</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n      </Modal>\r\n\r\n      <Navbar className=\"p-2 mx-2 align-items-center\" expand=\"lg\">\r\n        <Navbar.Brand href=\"#\">\r\n          <img\r\n            src=\"images/Holcimlogo.svg\"\r\n            className=\"holCimfontcolor\"\r\n            alt=\"holcimLogo.svg\"\r\n          /></Navbar.Brand>\r\n\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"w-100 justify-content-center\">\r\n            <div className=\"fontStyledata fontSizeofstatistical\">\r\n              {t(\"Statistical Demand Forecasting\")}\r\n            </div>\r\n          </Nav>\r\n\r\n          <Nav className=\"mx-5 text-center navbar-dropdown\">\r\n            <Stack direction=\"horizontal\" gap={1}>\r\n              <div>\r\n                <FontAwesomeIcon icon={faUser} color=\"#484036\" />\r\n              </div>\r\n              <div>\r\n                <NavDropdown title={window.sessionStorage.getItem('username')} id=\"nav-dropdown\">\r\n                  <NavDropdown.Item onClick={() => { setchangePassword(true); }} href=\"#\">\r\n                    <FontAwesomeIcon icon={faKey} style={{ marginRight: '0.5em' }} color=\"#484036\" />\r\n                    {t('Change Password')}\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item onClick={() => { window.location.replace('/');\r\n                sessionStorage.clear(); }} href=\"#\">\r\n                    <FontAwesomeIcon icon={faArrowRightFromBracket} style={{ marginRight: '0.5em' }} color=\"#484036\" />\r\n                    {t('Logout')}\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              </div>\r\n            </Stack>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n\r\n      <Nav variant=\"tabs\" defaultActiveKey=\"/collaborativetool\" style={{ marginBottom: '1em' }}>\r\n        <Nav.Item>\r\n          <Nav.Link className={\r\n            currentURL.toLowerCase() === \"/collaborativetool\"\r\n              ? \"activeBtn\"\r\n              : \"navButton\"\r\n          } onClick={() => {\r\n            navigate(\"/Collaborativetool\");\r\n          }} href=\"#\">\r\n            <img src=\"icons/Collaborative_Tool.png\" className=\"menu-icon\" alt=\"loginLogo\" />\r\n            {t(\"Collaborative Tool\")}\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n          <Nav.Link className={\r\n            currentURL.toLowerCase() === \"/forecastaccuracyreport\"\r\n              ? \"activeBtn\"\r\n              : \"navButton\"\r\n          } onClick={() => {\r\n            navigate(\"/ForecastAccuracyReport\");\r\n          }} href=\"#\">\r\n            <img src=\"icons/Forecast_Accuracy_Report_black.png\" className=\"menu-icon\" alt=\"loginLogo\" />\r\n            {t(\"Forecast Accuracy Report\")}\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n\r\n      {/* <Row>\r\n        <Col>\r\n          <div className=\"text-center fontStyledata fontSizeofstatistical\">\r\n            {t(\"Statistical Demand Forecasting\")}\r\n          </div>\r\n        </Col>\r\n      </Row> */}\r\n\r\n      {/* <div className=\"row m-0\">\r\n        <div className=\"col-md-12 text-center fontStyledata fontSizeofstatistical\">\r\n          {t(\"Statistical Demand Forecasting\")}\r\n        </div>\r\n      </div> */}\r\n\r\n      {/* <div className=\"container-fluid\">\r\n        <div className=\"row border shadow-s align-items-center\">\r\n          <div className=\"col-md-2 text-center\">\r\n            <img\r\n              src=\"images/Holcimlogo.svg\"\r\n              className=\"holCimfontcolor\"\r\n              alt=\"holcimLogo.svg\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-8 text-center fontStyledata fontSizeofstatistical\">\r\n            {t(\"Statistical Demand Forecasting\")}\r\n          </div>\r\n          <div className=\"col-md-2 text-start\">\r\n            <select className=\"selectBorder \" onChange={(e) => {\r\n              if (e.target.value === \"Change Password\") {\r\n                setchangePassword(true);\r\n              }\r\n              else if (e.target.value === \"Logout\") {\r\n                window.location.replace('/');\r\n              }\r\n            }}>\r\n              <option className=\"optionData\" selected>\r\n                {window.sessionStorage.getItem('username')}\r\n              </option>\r\n              <option value=\"Change Password\" className=\"optionData\">{t('Change Password')}</option>\r\n              <option value=\"Logout\" className=\"optionData\">{t('Logout')}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row border shadow-sm\">\r\n          <div className=\"col-md-12 text-center\">\r\n            <button\r\n              className={\r\n                currentURL.toLowerCase() === \"/collaborativetool\"\r\n                  ? \"btn  buttonWidth collaborativeBtn\"\r\n                  : \"btn btn-default border collaborativeNormalmode\"\r\n              }\r\n              onClick={() => {\r\n                navigate(\"/Collaborativetool\");\r\n              }}\r\n            >\r\n              <span\r\n                className={\r\n                  currentURL.toLowerCase() === \"/collaborativetool\"\r\n                    ? \"collaborativespan\"\r\n                    : \"collaborativespanNormalmode\"\r\n                }\r\n              >\r\n                {t(\"Collaborative Tool\")}\r\n              </span>\r\n            </button>\r\n            <button\r\n              className={\r\n                currentURL.toLowerCase() === \"/forecastaccuracyreport\"\r\n                  ? \"btn btn-default border  Forecastbutton buttonWidth ForecastExtradd \"\r\n                  : \"btn btn-default border Forecastbutton buttonWidth\"\r\n              }\r\n              onClick={() => {\r\n                navigate(\"/ForecastAccuracyReport\");\r\n              }}\r\n            >\r\n              <span\r\n                className={\r\n                  currentURL === \"/ForecastAccuracyReport\"\r\n                    ? \"forcastSpanenhanced\"\r\n                    : \"forCastSpan\"\r\n                }\r\n              >\r\n                {t(\"Forecast Accuracy Report\")}\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\nexport default Header;\r\n","import { Suspense } from \"react\";\r\nimport Header from \"../../Component/Header\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport DataLoadedPath from \"../../Component/DataLoadedPath\";\r\n\r\nconst SDFRoutes = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Suspense fallback>\r\n        <Outlet />\r\n      </Suspense>\r\n\r\n      {/* <Switch>\r\n        \r\n        <SDFDataRoute path={`${match.url}/Collaborativetool`} exact>\r\n          <Holcimuimaincomponent />\r\n        </SDFDataRoute>\r\n        \r\n        <SDFDataRoute path={`${match.url}/ForecastAccuracyReport`} exact>\r\n          <ForCastmaincomponent />\r\n        </SDFDataRoute>\r\n      </Switch> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SDFRoutes;\r\n","import axios from \"axios\";\r\nimport URLConfig from \"../../../URLConfig\";\r\nimport { LOGIN_DATA_TYPES } from \"./LoginDataType\";\r\nconst accessToken=window.sessionStorage.getItem('accesstoken');\r\nexport const actionLogindata = (reqbody) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: LOGIN_DATA_TYPES.LOGIN_DATA_FETCHING,\r\n      });\r\n      const url = URLConfig.loginUser();\r\n      console.log('-------->url',url);\r\n      const response = await axios.post(url, reqbody,{});\r\n      console.log('------>response',response);\r\n      dispatch({\r\n        type: LOGIN_DATA_TYPES.LOGIN_DATA_FETCHED,\r\n        payload: response,\r\n      });\r\n    } catch (err) {\r\n      console.log('err',err);\r\n      dispatch({\r\n        type: LOGIN_DATA_TYPES.LOGIN_DATA_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\nexport const actionChangepassword = (reqbody) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: LOGIN_DATA_TYPES.LOGIN_CHANGE_DATA_FETCHING });\r\n      const url = URLConfig.changeLoginuser();\r\n      const response = await axios.post(url, reqbody,{headers:{'Token':accessToken}});\r\n      dispatch({\r\n        type: LOGIN_DATA_TYPES.LOGIN_CHANGE_DATA_FETCHED,\r\n        payload: response,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOGIN_DATA_TYPES.LOGIN_CHANGE_DATA_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\n// export const actionChangelanguage=(reqbody)=>{\r\n//    return async(dispatch)=>{\r\n//      dispatch({\r\n//       type:LOGIN_DATA_TYPES.LANGUAGE_CHANGE_DATA,\r\n//       payload:reqbody\r\n//      })\r\n//    }\r\n// }\r\n"],"names":["currentURL","window","location","pathname","useTranslation","t","i18n","useState","changePassword","setchangePassword","confirmPassword","setconfirmPassword","newPassword","setnewPassword","dispatch","useDispatch","useEffect","changeLanguage","sessionStorage","getItem","changePasswordres","useSelector","state","loginDataReducer","loginfetchStateresponse","data","shallowEqual","undefined","status","success","alert","clear","replace","toast","navigate","useNavigate","isOpen","id","Row","className","Col","sm","md","src","alt","style","position","onClick","icon","faXmark","color","fontSize","type","placeholder","onChange","e","target","value","Button","variant","actionChangepassword","password","email","token","Navbar","expand","href","Nav","Stack","direction","gap","faUser","NavDropdown","title","faKey","marginRight","faArrowRightFromBracket","defaultActiveKey","marginBottom","toLowerCase","Suspense","fallback","accessToken","actionLogindata","reqbody","LOGIN_DATA_TYPES","url","URLConfig","console","log","axios","response","payload","headers"],"sourceRoot":""}